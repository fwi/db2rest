---
openapi: 3.0.0
info:
  title: Db2rest API
  description: Database 2 REST API 
  version: 1.0.0-DRAFT

consumes:
- application/json
produces:
- application/json
  
path-anchors:
- &limitparam
  parameters:
  - $ref: '#/components/parameters/offset'
  - $ref: '#/components/parameters/limit'
- &valueparam
  parameters: # YAML anchors do not allow merging of lists.
  - $ref: '#/components/parameters/taskcolumn'
  - $ref: '#/components/parameters/value'
  - $ref: '#/components/parameters/valuetype'
  - $ref: '#/components/parameters/offset'
  - $ref: '#/components/parameters/limit'
- &valueopparam
  parameters:
  - $ref: '#/components/parameters/taskcolumn'
  - $ref: '#/components/parameters/op'
  - $ref: '#/components/parameters/value'
  - $ref: '#/components/parameters/valuetype'
  - $ref: '#/components/parameters/offset'
  - $ref: '#/components/parameters/limit'
- &tasktag
  tags:
  - task
- &responsetaskarray
  '200':
    $ref: '#/components/reponses/TaskArrayOK'
- &taskget
  <<: *tasktag
  responses:
    <<: *responsetaskarray
- &taskgetone
  <<: *tasktag
  responses:
    <<: *responsetaskarray
    '400':
      description: More than one task found
    '404':
      description: Task not found
- &reqselect
  requestBody:
    description: Selection in query form
    required: false
    content:
      application/json:
        schema:
          type: array
          additionalProperties: true
          example:
          -
            id:
            - 2
            - 3

paths:
  '/task/select':
    summary: List of tasks
    <<: *limitparam
    get:
      <<: *taskget
    post:
      <<: *taskget
      <<: *reqselect
  '/task/select/{column}/{value}':
    summary: List of tasks filtered by column value 
    <<: *valueparam
    get:
      <<: *taskget
  '/task/select/one/{column}/{value}':
    summary: One task filtered by column value 
    <<: *valueparam
    get:
      <<: *taskgetone
  '/task/select/{column}/{op}/{value}':
    summary: List of tasks filtered by column value and operation
    <<: *valueopparam
    get:
      <<: *taskget

components:
  parameters:
    offset:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    limit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 10000
        default: 1000
    valuetype:
      in: query
      name: valuetype
      required: false
      schema:
        type: string
        enum: [text, number, switch]
    taskcolumn:
      in: path
      name: column
      required: true
      schema:
        type: string
        enum: [id, created, modified, description, completed]
    value:
      in: path
      name: value
      required: true
      schema:
        AnyValue: {}
    op:
      in: path
      name: op
      required: true
      schema:
        type: string
        enum: ['=', 'like', 'ilike', '>', '>=', '<', '<=', 'is null', 'is not null', 'in']
  reponses:
    TaskArrayOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskArray'
  schemas:
    TaskArray:
      type: array
      items:
        $ref: '#/components/schemas/Task'
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        description:
          type: string
        completed:
          type: boolean
          